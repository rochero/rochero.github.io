<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git学习笔记</title>
      <link href="/2022/04/29/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/04/29/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><p>学习材料：<br><a href="https://git-scm.com/book/zh/v2">官方中文书《Pro Git 第二版》</a><br><a href="https://learngitbranching.js.org/?locale=zh_CN">在线可视化交互式学习Git分支操作</a><br><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰的Git教程</a></p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>Git 是一种主流的分布式的版本控制系统（version control system, or VCS）。</p><p>版本控制系统是指记录文件内容变化以便查阅特定版本修订情况的系统，它能够将文件甚至整个项目回退到特定版本。</p><p>分布式是指系统允许同一项目由不同环境下的开发者协同工作；如果某处用于协同工作的服务器发生故障，可以用其他镜像出来的本地仓库恢复。</p><p>主流是因为 Git 开源免费，速度快，功能强大，能高效管理超大规模的项目，完全支持大量并行分支下的多人开发模式。</p><h3 id="2-基础概念"><a href="#2-基础概念" class="headerlink" title="2. 基础概念"></a>2. 基础概念</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul><li><p>记录快照：每次提交更新或保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引；Git 不再重新存储没有改动的文件，而是保留指向已存储的文件的链接。</p></li><li><p>几乎本地执行：绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息。</p></li><li><p>保证完整性：Git 在存储前计算所有数据的校验和，然后以校验和来引用。这意味着不可能在 Git 不知情时更改任何文件内容或目录内容。</p></li><li><p>一般只添加数据：Git 操作几乎只往 Git 数据库中增加数据。一旦你提交快照到 Git 中，就难以再丢失数据。</p></li></ul><h4 id="工作区域"><a href="#工作区域" class="headerlink" title="工作区域"></a>工作区域</h4><p>Git 仓库目录（repository, or .git）是 Git 用来保存项目的元数据和对象数据库的地方。这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。</p><p>工作目录（working directory）是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出<br>来的文件，放在磁盘上供你使用或修改。</p><p>暂存区域（staging area, or index）是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。</p><h4 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h4><p>Git 中的文件分三种基本的状态：</p><ul><li>已提交（committed）：该文件已保存在本地数据库中。</li><li>已修改（modified）：该文件已被修改，但未保存到数据库中。</li><li>已暂存（staged）：该文件已被修改且被标记，使之包含在下次提交的快照中。</li></ul><p>如果 Git 目录中保存着特定版本的文件，就属于已提交状态；<br>如果作了修改并已放入暂存区域，就属于已暂存状态；<br>如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。</p><p><strong>注</strong>：在项目目录下但不在 Git 中的文件属于未跟踪状态（untracked）；在分支合并时起冲突的文件会被标记成未合并状态（unmerged）。</p><h3 id="3-分支模型"><a href="#3-分支模型" class="headerlink" title="3. 分支模型"></a>3. 分支模型</h3><h4 id="分支简介"><a href="#分支简介" class="headerlink" title="分支简介"></a>分支简介</h4><p>暂存操作（git add）会先为每一个文件用哈希算法计算校验和，再把当前版本的文件快照保存为 blob 对象放到仓库，最后把校验和加入到暂存区域等待提交。</p><p>提交操作（git commit）会先计算每一个子目录的校验和，在把校验和保存为 tree 对象放到仓库。<br>然后，Git 创建一个<strong>提交对象</strong>（commit object），它包含：</p><ul><li>指向 blob 对象的指针；</li><li>指向 tree 对象的指针；</li><li>指向父对象的指针；</li><li>作者姓名和邮箱地址；</li><li>提交时的注释信息。</li></ul><p><strong>Git 的分支，其实本质上就是指向提交对象的可变指针</strong>。从存储的角度来说就是一个包含所指对象校验和的文件。</p><p>创建仓库的操作（git init）会默认设置一个分支，代表主分支，一般名为<code>master</code>或<code>main</code>。<br>创建分支的操作也仅仅是增加了一个可以移动的指针。</p><p>Git 中有一个特殊指针<code>HEAD</code>，用于指向当前所在的分支。<br>每次提交时当前分支会自动向前移动以指向最新的提交对象。<br>切换分支的操作就是切换<code>HEAD</code>的指向，同时<strong>会改变工作目录中的文件</strong>以还原切换后的分支最后一次提交后的状态。</p><h4 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h4><p>在项目中为了修复某个 bug 或者增加某个功能，开发者往往要新建一个对应的分支，然后在该分支上工作，编码完成和测试无误后再回到主分支以合并该分支。至此主分支包含了该分支的工作，所以可以删除该分支。</p><p>一次合并一般要用到三个快照：</p><ul><li>当前分支末端所指的快照；</li><li>待合并分支末端所指的快照；</li><li>两个分支的公共祖先所指的快照。</li></ul><p>一般地。三方合并后会创建一个新的快照并且自动创建一个新的提交指向它。因此三方合并会使得当前分支指针指向两个父提交对象。<br>特殊地，如果两个分支互相“平行”，即顺着当前分支走下去能到达待合并的分支，那么合并时会把指针直接向前快速推进（fast-forward）。</p><h5 id="遇到冲突的分支合并"><a href="#遇到冲突的分支合并" class="headerlink" title="遇到冲突的分支合并"></a>遇到冲突的分支合并</h5><p>如果在两个不同的分支中对同一文件的同一部分进行了不同修改，Git 做了合并但不会自动创建一个新的合并提交。Git 会报告冲突并等待手动解决。<br>Git 会在有冲突的文件中加入标准的冲突解决标记，这样你可以打开这些包含冲突的文件然后手动解决冲突。</p><h3 id="4-远程仓库"><a href="#4-远程仓库" class="headerlink" title="4. 远程仓库"></a>4. 远程仓库</h3><p>远程仓库是指托管在网络中的项目的版本库。<br>特殊地，远程仓库也可以设置在本地主机上，“远程”只是代表在别的地方。</p><p>当你克隆（git clone）了一个远程仓库，Git 会默认给该远程仓库所在服务器命名为<code>origin</code>。</p><p>抓取操作（git fetch）会尝试从目标远程仓库中下载本地仓库还没有的数据；<br>拉取操作（git pull）会抓取数据后并自动尝试合并到当前的分支；<br>推送操作（git push）会尝试向目标远程仓库上传本地更新的数据；</p><p><strong>抓取不会自动合并或修改当前的工作</strong>；<br><strong>推送在对远程仓库有写权限且抓取并合并远程仓库后才生效</strong>；<br><strong>拉取和推送都需要本地的分支设置了跟踪远程分支</strong>。</p><h4 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h4><p>远程跟踪分支是对远程分支状态的引用。在每一次抓取远程数据后，远程跟踪分支会自动移动以同步远程仓库的状态。</p><h4 id="变基"><a href="#变基" class="headerlink" title="变基"></a>变基</h4><h3 id="5-安装"><a href="#5-安装" class="headerlink" title="5. 安装"></a>5. 安装</h3><ul><li><a href="https://git-scm.com/downloads">二进制文件</a></li><li><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/">源码</a></li></ul><p>注：对于 CentOS 7，yum 安装的 Git 版本较低，如果需要升级需要下载新版的源码编译安装；对于学生用的云服务器，编译过程可能会出现内存不足，需要自行设置系统的交换分区。</p><p>因为每次提交都需要用户名和邮箱地址，所以安装后必须设置用户名和邮箱。</p><h2 id="二、基础"><a href="#二、基础" class="headerlink" title="二、基础"></a>二、基础</h2><p><a href="https://liaoxuefeng.gitee.io/resource.liaoxuefeng.com/git/git-cheat-sheet.pdf">Git 速查表</a></p><p>注：新版 Git 支持一些新的命令，比如<code>git restore</code>来分担一名多用的<code>git checkout</code>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Git </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于学习</title>
      <link href="/2022/04/26/%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8E%9F%E5%88%99%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
      <url>/2022/04/26/%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8E%9F%E5%88%99%E4%B8%8E%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="学习的原则"><a href="#学习的原则" class="headerlink" title="学习的原则"></a>学习的原则</h2><ul><li><p>控制速度</p></li><li></li><li><p>经常学习</p></li><li><p>广泛学习</p><h2 id="学习的原理"><a href="#学习的原理" class="headerlink" title="学习的原理"></a>学习的原理</h2></li><li><p>学习是对知识的输入、加工、储备和输出的过程；</p></li><li><p>人获取信息主要靠视觉；</p><ul><li>大脑擅长捕捉图像信息；</li><li>眼跳（Saccade）、眼停（Fixation）和回视（Regression）会限制人的阅读速度；</li></ul></li></ul><h2 id="学习的方法"><a href="#学习的方法" class="headerlink" title="学习的方法"></a>学习的方法</h2><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ul><li>阅读的原则<ul><li>阅读的范围：广泛阅读</li><li>阅读的频率：经常阅读</li><li>阅读的速度：限时阅读</li><li>内容的难度：适度阅读</li><li>内容的优先级：侧重阅读</li><li>内容的属性：标记阅读</li></ul></li><li><strong>阅读的流程</strong>：<ol><li>预览</li><li>读前提问</li><li>阅读</li><li>读后复述</li><li>总结</li></ol></li></ul><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul><li>大纲</li><li>康奈尔分区</li><li>思维导图</li></ul><h3 id="记忆"><a href="#记忆" class="headerlink" title="记忆"></a>记忆</h3><ul><li>构造线索</li><li>间隔重复</li></ul><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><ul><li>死线倒计时</li><li>日程时间线</li><li>内容管理系统</li><li>快速暂存区</li><li>大任务清单</li><li>小任务清单</li><li>睡前日总结&#x2F;计划</li><li>工前周总结&#x2F;计划</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h3 id="表达"><a href="#表达" class="headerlink" title="表达"></a>表达</h3><h2 id="学习的优化"><a href="#学习的优化" class="headerlink" title="学习的优化"></a>学习的优化</h2><h3 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h3><h3 id="要专注"><a href="#要专注" class="headerlink" title="要专注"></a>要专注</h3><p>工作质量 &#x3D; 注意力强度×持续时间</p><h3 id="不要拖延"><a href="#不要拖延" class="headerlink" title="不要拖延"></a>不要拖延</h3><h3 id="不要焦虑"><a href="#不要焦虑" class="headerlink" title="不要焦虑"></a>不要焦虑</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 自制 </tag>
            
            <tag> 观点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美式英语国际音标表</title>
      <link href="/2020/02/27/%E7%BE%8E%E5%BC%8F%E8%8B%B1%E8%AF%AD%E5%9B%BD%E9%99%85%E9%9F%B3%E6%A0%87%E8%A1%A8/"/>
      <url>/2020/02/27/%E7%BE%8E%E5%BC%8F%E8%8B%B1%E8%AF%AD%E5%9B%BD%E9%99%85%E9%9F%B3%E6%A0%87%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="美式英语中的辅音（Consonants）"><a href="#美式英语中的辅音（Consonants）" class="headerlink" title="美式英语中的辅音（Consonants）"></a>美式英语中的辅音（Consonants）</h2><table><thead><tr><th>音位变体</th><th>重拼法</th><th>音位</th><th>在单词的开始</th><th>在单词的中间</th><th>在单词的末尾</th></tr></thead><tbody><tr><td>[p]</td><td>p</td><td>&#x2F;p&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/64">place</a>[ˈpleɪs]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/65">company</a>[ˈkʰʌmpənɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/66">group</a>[ˈɡɹup]</td></tr><tr><td>[pʰ]</td><td>p</td><td>&#x2F;p&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/67">part</a>[ˈpʰɑrt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/68">support</a>[səˈpʰɔrt]</td><td>-</td></tr><tr><td>[b]</td><td>b</td><td>&#x2F;b&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/69">be</a>[ˈbi]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/70">number</a>[ˈnʌmbɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/71">job</a>[ˈdʒɑb]</td></tr><tr><td>[t]</td><td>t</td><td>&#x2F;t&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/72">today</a>[təˈdeɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/73">still</a>[ˈstɪɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/74">get</a>[ˈɡɛt]</td></tr><tr><td>[tʰ]</td><td>t</td><td>&#x2F;t&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/75">two</a>[ˈtʰu]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/76">attention</a>[əˈtʰɛnʃən]</td><td>-</td></tr><tr><td>[ɾ]</td><td>t</td><td>&#x2F;t&#x2F; or &#x2F;d&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/77">water</a>[ˈwɔɾɚ]</td><td>-</td></tr><tr><td>[ʔ]</td><td>t</td><td>&#x2F;t&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/78">certain</a>[ˈsɝʔn̩]</td><td>-</td></tr><tr><td>[d]</td><td>d</td><td>&#x2F;d&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/79">day</a>[ˈdeɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/80">words</a>[ˈwɝdz]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/81">need</a>[ˈnid]</td></tr><tr><td>[k]</td><td>k</td><td>&#x2F;k&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/82">quite</a>[ˈkwaɪt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/83">next</a>[ˈnɛkst]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/84">like</a>[ˈlaɪk]</td></tr><tr><td>[kʰ]</td><td>k</td><td>&#x2F;k&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/85">come</a>[ˈkʰʌm]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/86">account</a>[əˈkʰaʊnt]</td><td>-</td></tr><tr><td>[ɡ]</td><td>g</td><td>&#x2F;ɡ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/87">go</a>[ˈɡoʊ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/88">together</a>[təˈɡɛðɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/89">big</a>[ˈbɪɡ]</td></tr><tr><td>[m]</td><td>m</td><td>&#x2F;m&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/90">me</a>[ˈmi]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/91">women</a>[ˈwɪmən]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/92">same</a>[ˈseɪm]</td></tr><tr><td>[m̩]</td><td>m</td><td>&#x2F;m̩&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/93">circumstances</a>[ˈsɝkm̩ˌstænsəz]</td><td>-</td></tr><tr><td>[n]</td><td>n</td><td>&#x2F;n&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/94">know</a>[ˈnoʊ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/95">another</a>[əˈnʌðɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/96">then</a>[ˈðɛn]</td></tr><tr><td>[n̩]</td><td>n</td><td>&#x2F;n̩&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/97">student</a>[ˈstudn̩t]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/98">person</a>[ˈpʰɝsn̩]</td></tr><tr><td>[ŋ]</td><td>ng, NG</td><td>&#x2F;ŋ&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/99">think</a>[ˈθɪŋk]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/100">thing</a>[ˈθɪŋ]</td></tr><tr><td>[f]</td><td>f</td><td>&#x2F;f&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/101">few</a>[ˈfju]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/102">often</a>[ˈɔfən]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/103">life</a>[ˈlaɪf]</td></tr><tr><td>[v]</td><td>v</td><td>&#x2F;v&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/104">voice</a>[ˈvɔɪs]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/105">ever</a>[ˈɛvɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/106">give</a>[ˈɡɪv]</td></tr><tr><td>[θ]</td><td>th, TH</td><td>&#x2F;θ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/107">three</a>[ˈθɹi]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/108">nothing</a>[ˈnʌθɪŋ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/109">death</a>[ˈdɛθ]</td></tr><tr><td>[ð]</td><td>dh, <u>TH</u></td><td>&#x2F;ð&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/110">there</a>[ˈðɛr]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/111">mother</a>[ˈmʌðɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/112">smooth</a>[ˈsmuð]</td></tr><tr><td>[s]</td><td>s</td><td>&#x2F;s&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/113">say</a>[ˈseɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/114">also</a>[ˈɔɫˌsoʊ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/115">yes</a>[ˈjɛs]</td></tr><tr><td>[z]</td><td>z</td><td>&#x2F;z&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/116">zone</a>[ˈzoʊn]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/117">music</a>[ˈmjuzɪk]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/118">does</a>[ˈdʌz]</td></tr><tr><td>[ʃ]</td><td>sh, SH</td><td>&#x2F;ʃ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/119">she</a>[ˈʃi]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/120">social</a>[ˈsoʊʃəɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/121">fish</a>[ˈfɪʃ]</td></tr><tr><td>[ʒ]</td><td>zh, ZH</td><td>&#x2F;ʒ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/122">genre</a>[ˈʒɑnɹə]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/123">decision</a>[dɪˈsɪʒən]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/124">garage</a>[ɡɚˈɹɑʒ]</td></tr><tr><td>[h]</td><td>h</td><td>&#x2F;h&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/125">how</a>[ˈhaʊ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/126">perhaps</a>[pɚˈhæps]</td><td>-</td></tr><tr><td>[tʃ]</td><td>ch, CH</td><td>&#x2F;tʃ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/127">child</a>[ˈtʃaɪəɫd]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/128">teacher</a>[ˈtʰitʃɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/129">much</a>[ˈmʌtʃ]</td></tr><tr><td>[dʒ]</td><td>j</td><td>&#x2F;dʒ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/130">just</a>[ˈdʒʌst]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/131">major</a>[ˈmeɪdʒɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/132">age</a>[ˈeɪdʒ]</td></tr><tr><td>[j]</td><td>y</td><td>&#x2F;j&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/133">yet</a>[ˈjɛt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/134">million</a>[ˈmɪɫjən]</td><td>-</td></tr><tr><td>[w]</td><td>w</td><td>&#x2F;w&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/135">when</a>[ˈwɛn]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/136">away</a>[əˈweɪ]</td><td>-</td></tr><tr><td>[ɹ]</td><td>r</td><td>&#x2F;ɹ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/137">right</a>[ˈɹaɪt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/138">through</a>[ˈθɹu]</td><td>-</td></tr><tr><td>[l]</td><td>l</td><td>&#x2F;l&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/139">last</a>[ˈlæst]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/140">believe</a>[bəˈliv]</td><td>-</td></tr><tr><td>[ɫ]</td><td>l</td><td>&#x2F;l&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/141">old</a>[ˈoʊɫd]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/142">well</a>[ˈwɛɫ]</td></tr><tr><td>[ɫ̩]</td><td>l</td><td>&#x2F;l̩&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/143">models</a>[ˈmɑɾɫ̩z]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/144">little</a>[ˈlɪɾɫ̩]</td></tr></tbody></table><h2 id="美式英语中的元音（Vowels）"><a href="#美式英语中的元音（Vowels）" class="headerlink" title="美式英语中的元音（Vowels）"></a>美式英语中的元音（Vowels）</h2><table><thead><tr><th>音位变体</th><th>重拼法</th><th>音位</th><th>在单词的开始</th><th>在单词的中间</th><th>在单词的末尾</th></tr></thead><tbody><tr><td>[i]</td><td>ee, ē</td><td>&#x2F;i&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/1">even</a>[ˈivən]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/2">these</a>[ˈðiz]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/3">we</a>[ˈwi]</td></tr><tr><td>[ɪ]</td><td>i</td><td>&#x2F;ɪ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/4">if</a>[ˈɪf]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/5">which</a>[ˈwɪtʃ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/6">many</a>[ˈmɛnɪ]</td></tr><tr><td>[e]</td><td>e</td><td>&#x2F;e&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/7">vacation</a>[veˈkʰeɪʃən]</td><td>-</td></tr><tr><td>[ɛ]</td><td>eh, e</td><td>&#x2F;ɛ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/8">any</a>[ˈɛnɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/9">said</a>[ˈsɛd]</td><td>-</td></tr><tr><td>[æ]</td><td>a</td><td>&#x2F;æ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/10">ask</a>[ˈæsk]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/11">back</a>[ˈbæk]</td><td>-</td></tr><tr><td>[u]</td><td>oo, o͞o</td><td>&#x2F;u&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/12">oozing</a>[ˈuzɪŋ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/13">school</a>[ˈskuɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/14">who</a>[ˈhu]</td></tr><tr><td>[ʊ]</td><td>u, o͝o</td><td>&#x2F;ʊ&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/15">good</a>[ˈɡʊd]</td><td>-</td></tr><tr><td>[o]</td><td>ow, ō</td><td>&#x2F;o&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/16">okay</a>[oˈkʰeɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/17">November</a>[noˈvɛmbɚ]</td><td>-</td></tr><tr><td>[ɔ]</td><td>aa, ä</td><td>&#x2F;ɔ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/18">all</a>[ˈɔɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/19">want</a>[ˈwɔnt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/20">saw</a>[ˈsɔ]</td></tr><tr><td>[ɑ]</td><td>aa, ä</td><td>&#x2F;ɑ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/21">October</a>[ɑkˈtʰoʊbɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/22">not</a>[ˈnɑt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/23">grandma</a>[ˈɡɹændˌmɑ]</td></tr><tr><td>[ə]</td><td>uh, ə</td><td>&#x2F;ə&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/24">about</a>[əˈbaʊt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/25">people</a>[ˈpʰipəɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/26">idea</a>[aɪˈdiə]</td></tr><tr><td>[ʌ]</td><td>uh, ə</td><td>&#x2F;ʌ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/27">other</a>[ˈʌðɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/28">one</a>[ˈwʌn]</td><td>-</td></tr></tbody></table><h2 id="美式英语中的儿化元音（R-colored-vowels）"><a href="#美式英语中的儿化元音（R-colored-vowels）" class="headerlink" title="美式英语中的儿化元音（R-colored vowels）"></a>美式英语中的儿化元音（R-colored vowels）</h2><table><thead><tr><th>音位变体</th><th>重拼法</th><th>音位</th><th>在单词的开始</th><th>在单词的中间</th><th>在单词的末尾</th></tr></thead><tbody><tr><td>[ɚ]</td><td>(u)r, ər</td><td>&#x2F;ɚ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/29">around</a>[ɚˈɹaʊnd]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/30">percent</a>[pɚˈsɛnt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/31">never</a>[ˈnɛvɚ]</td></tr><tr><td>[ɝ]</td><td>ur, ər</td><td>&#x2F;ɝ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/32">early</a>[ˈɝlɪ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/33">first</a>[ˈfɝst]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/34">sir</a>[ˈsɝ]</td></tr><tr><td>[ɪr]</td><td>eer, i(ə)r</td><td>&#x2F;ɪr&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/35">ears</a>[ˈɪrz]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/36">years</a>[ˈjɪrz]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/37">here</a>[ˈhɪr]</td></tr><tr><td>[ɛr]</td><td>ehr, e(ə)r</td><td>&#x2F;ɛr&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/38">airport</a>[ˈɛrˌpɔrt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/39">therefore</a>[ˈðɛrˌfɔr]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/40">where</a>[ˈwɛr]</td></tr><tr><td>[ʊr]</td><td>or, ôr</td><td>&#x2F;ʊr&#x2F;</td><td>-</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/41">insurance</a>[ɪnˈʃʊrəns]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/42">sure</a>[ˈʃʊr]</td></tr><tr><td>[ɔr]</td><td>or, ôr</td><td>&#x2F;ɔr&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/43">order</a>[ˈɔrɾɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/44">morning</a>[ˈmɔrnɪŋ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/45">more</a>[ˈmɔr]</td></tr><tr><td>[ɑr]</td><td>aar, är</td><td>&#x2F;ɑr&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/46">art</a>[ˈɑrt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/47">large</a>[ˈlɑrdʒ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/48">far</a>[ˈfɑr]</td></tr></tbody></table><h2 id="美式英语中的双元音（Diphthongs）"><a href="#美式英语中的双元音（Diphthongs）" class="headerlink" title="美式英语中的双元音（Diphthongs）"></a>美式英语中的双元音（Diphthongs）</h2><table><thead><tr><th>音位变体</th><th>重拼法</th><th>音位</th><th>在单词的开始</th><th>在单词的中间</th><th>在单词的末尾</th></tr></thead><tbody><tr><td>[aɪ]</td><td>ai, ī</td><td>&#x2F;aɪ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/49">eyes</a>[ˈaɪz]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/50">time</a>[ˈtʰaɪm]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/51">why</a>[ˈwaɪ]</td></tr><tr><td>[aʊ]</td><td>aw, ou</td><td>&#x2F;aʊ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/52">out</a>[ˈaʊt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/53">down</a>[ˈdaʊn]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/54">now</a>[ˈnaʊ]</td></tr><tr><td>[ɔɪ]</td><td>oy, oi</td><td>&#x2F;ɔɪ&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/55">oil</a>[ˈɔɪəɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/56">point</a>[ˈpʰɔɪnt]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/57">boy</a>[ˈbɔɪ]</td></tr><tr><td>[eɪ]</td><td>ei, ā</td><td>&#x2F;e&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/58">able</a>[ˈeɪbəɫ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/59">make</a>[ˈmeɪk]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/60">way</a>[ˈweɪ]</td></tr><tr><td>[oʊ]</td><td>ow, ō</td><td>&#x2F;o&#x2F;</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/61">over</a>[ˈoʊvɚ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/62">both</a>[ˈboʊθ]</td><td><a href="https://easypronunciation.com/zh/play-video/learn-english_american/63">so</a>[ˈsoʊ]</td></tr></tbody></table><h2 id="国际音标表注释"><a href="#国际音标表注释" class="headerlink" title="国际音标表注释"></a>国际音标表注释</h2><h3 id="重拼法（Respelling）"><a href="#重拼法（Respelling）" class="headerlink" title="重拼法（Respelling）"></a>重拼法（Respelling）</h3><p><strong>重拼法</strong>采用原有的、常见的符号代替要拼音的符号，需要时可在符号上添加标记。重拼法和国际音标是英文标音的两种主流方法。音标是在国内为大家熟知的方法,然而在英美许多针对母语者的英文词典常用重拼法。重拼法更符合母语说话人的直觉,且更易输入。本表中重拼法参考自谷歌搜索的英语发音工具插件。</p><h3 id="音位和音位变体（Phonemes-and-allophones）"><a href="#音位和音位变体（Phonemes-and-allophones）" class="headerlink" title="音位和音位变体（Phonemes and allophones）"></a>音位和音位变体（Phonemes and allophones）</h3><p><strong>音位</strong>（<strong>phoneme</strong>）是能够改变词义的语音。例如，将单词kiss中的最后一个音替换为&#x2F;l&#x2F;音就成了另一个单词 kill。因此，&#x2F;s&#x2F;和&#x2F;l&#x2F;都是音位。</p><p><strong>宽式音标</strong>（<strong>Phonemic transcription</strong>）使用音位来显示单词的发音。它是写在斜线之间的，如下例所示：</p><ul><li>kiss &#x2F;ˈkɪs&#x2F;</li><li>kill &#x2F;ˈkɪl&#x2F;</li></ul><p>这种音标没有显示出在类似音之间的细微差别。为了显示单词的确切发音，需要<strong>严式音标</strong>（<strong>narrow transcription</strong>）。例如，对于同样的两个单词，我们会写成：</p><ul><li>kiss [ˈkʰɪs]</li><li>kill [ˈkʰɪɫ]</li></ul><p>请注意，在严式音标中使用方括号而不是斜线。在我们的例子中，严式音标也使用了略有不同的符号。为什么？因为一种语言中的每个音位可能有几种不同的发音。同一<strong>音位</strong>的这些变体发音被称为<strong>音位变体</strong>（<strong>allophone</strong>）。</p><p>让我们以<strong>音位</strong> &#x2F;k&#x2F;为例。在英语中，&#x2F;k&#x2F;有两个<strong>音位变体</strong>：</p><ul><li>不送气的音[k]，如 quite [ˈkwaɪt]</li><li>在释放后有强气的送气音[kʰ]，如 kill [ˈkʰɪɫ]</li></ul><p>如果您真的想提高发音并且听起来像母语人士一样发音，那么，我强烈建议您熟悉英语中每一个<strong>音位</strong>的所有<strong>音位变体</strong>（不同的变体）。</p><p>例如，我们来看下列英文单词中的音位&#x2F;t&#x2F;：today, two, water, certain。如果用词典查找它们的发音，您很可能会发现这样的情形：</p><ul><li>today &#x2F;təˈdeɪ&#x2F;</li><li>two &#x2F;ˈtuː&#x2F;</li><li>water &#x2F;ˈwɔtɚ&#x2F;或&#x2F;ˈwɔtər&#x2F;</li><li>certain &#x2F;ˈsɝt(ə)n&#x2F;</li></ul><p>所有四个词都有“同一个”音位&#x2F; t &#x2F;。但听起来一样吗？不一样！在<strong>严式音标</strong>（它显示确切的发音，记得吧？）中，相同的这几个词将如下标注：</p><ul><li>today [təˈdeɪ]</li><li>two [ˈtʰu]</li><li>water [ˈwɔɾɚ]</li><li>certain [ˈsɝʔn̩]</li></ul><p>这意味着，音位&#x2F;t&#x2F;具有至少四个音位变体：</p><ul><li>未吸气的[t]</li><li>吸气的[tʰ]</li><li>听起来几乎像[d]的齿龈闪音[ɾ]</li><li>通过阻塞声带（声门）中的气流产生的喉塞音[ʔ]</li></ul><h3 id="本表中使用的国际音标符号"><a href="#本表中使用的国际音标符号" class="headerlink" title="本表中使用的国际音标符号"></a>本表中使用的国际音标符号</h3><p>在这个国际音标表中使用的标音符号可能与您在包括维基百科在内的<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E8%AA%9E%E5%9C%8B%E9%9A%9B%E9%9F%B3%E6%A8%99%E5%88%97%E8%A1%A8"><strong>用于英语方言的综合国际音标表</strong></a>的其它来源可以找到的内容稍有不同。</p><p>我一度很难确定本页面上的国际音标表该使用哪一套国际音标符号。我最终决定遵从Larry H. Small的<a href="https://www.pearsonhighered.com/program/Small-Fundamentals-of-Phonetics-A-Practical-Guide-for-Students-4th-Edition/PGM20009.html"><strong>《音标基础》（Fundamentals of Phonetics）</strong></a>第4版的建议。该书从其它来源提供了非常好的所有内容的摘要。</p><p>在下表中，您将找到本书中使用的音标的特征。</p><table><thead><tr><th>特征</th><th>《音标基础》中的音标</th><th>在大多数美式英语词典中的音标</th></tr></thead><tbody><tr><td>音节辅音&#x2F;l̩&#x2F;、&#x2F;m̩&#x2F;和&#x2F;n̩&#x2F;用位于其下的小竖线来显示。 例词：little，student</td><td>&#x2F;ˈlɪtl̩&#x2F; &#x2F;ˈstudn̩t&#x2F;</td><td>&#x2F;ˈlɪt(ə)l&#x2F; &#x2F;ˈstud(ə)nt&#x2F;</td></tr><tr><td>重音&#x2F;ˈər&#x2F;被写为&#x2F;ɝ&#x2F;，非重音&#x2F;ər&#x2F;被写为&#x2F;ɚ&#x2F;。 例词：first，other</td><td>&#x2F;ˈfɝst&#x2F; &#x2F;ˈʌðɚ&#x2F;</td><td>&#x2F;ˈfərst&#x2F; &#x2F;ˈʌðər&#x2F;</td></tr><tr><td>最后的非重音&#x2F;i&#x2F;被写为&#x2F;ɪ&#x2F;。 例词：very，early</td><td>&#x2F;ˈvɛrɪ&#x2F; &#x2F;ˈɝlɪ&#x2F;</td><td>&#x2F;ˈvɛriː&#x2F; &#x2F;ˈərliː&#x2F;</td></tr><tr><td>非重音&#x2F;eɪ&#x2F;被写为&#x2F;e&#x2F;，非重音&#x2F;oʊ&#x2F;被写为&#x2F;o&#x2F;。在最后的位置，即使是非重音，它们仍然是双元音&#x2F;eɪ&#x2F;和&#x2F;oʊ&#x2F;。 例词：vacation，photos</td><td>&#x2F;veˈkeɪʃən&#x2F; &#x2F;ˈfoʊtoz&#x2F; &#x2F;ˈfoʊtoʊ&#x2F;</td><td>&#x2F;veɪˈkeɪʃən&#x2F; &#x2F;ˈfoʊtoʊz&#x2F; &#x2F;ˈfoʊtoʊ&#x2F;</td></tr><tr><td>音位&#x2F;u&#x2F;和&#x2F;i&#x2F;不使用延长符号[ː]。 例词：eat，group</td><td>&#x2F;ˈit&#x2F; &#x2F;ˈɡɹup&#x2F;</td><td>&#x2F;ˈiːt&#x2F; &#x2F;ˈɡɹuːp&#x2F;</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 搬运 </tag>
            
            <tag> 英语 </tag>
            
            <tag> 语音 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathJax-LaTeX 语法</title>
      <link href="/2020/01/12/MathJax-%E7%9B%B8%E5%85%B3LaTeX%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/01/12/MathJax-%E7%9B%B8%E5%85%B3LaTeX%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="常见符号的写法"><a href="#常见符号的写法" class="headerlink" title="常见符号的写法"></a>常见符号的写法</h2><h3 id="1-指数和下标-左上、左下、右上、右下、正上、正下"><a href="#1-指数和下标-左上、左下、右上、右下、正上、正下" class="headerlink" title="1. 指数和下标(左上、左下、右上、右下、正上、正下)"></a>1. 指数和下标(左上、左下、右上、右下、正上、正下)</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>a<span class="built_in">_</span>1<span class="keyword">\qquad</span> x<span class="built_in">^</span>2<span class="keyword">\qquad</span> e<span class="built_in">^</span>&#123;-<span class="keyword">\alpha</span> t&#125;<span class="keyword">\qquad</span> e<span class="built_in">^</span>&#123;x<span class="built_in">^</span>2&#125;<span class="keyword">\neq</span>&#123;e<span class="built_in">^</span>x&#125;<span class="built_in">^</span>2<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\sideset</span>&#123;<span class="built_in">^</span>1<span class="built_in">_</span>2&#125;&#123;<span class="built_in">^</span>3<span class="built_in">_</span>4&#125;<span class="keyword">\bigotimes</span><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\mathop</span>&#123;abc&#125;<span class="keyword">\limits</span><span class="built_in">_</span>1<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$a_1\qquad x^2\qquad e^{-\alpha t}\qquad e^{x^2}\neq{e^x}^2$$<br>$$\sideset{^1_2}{^3_4}\bigotimes$$<br>$$\mathop{abc}\limits_1$$</p><h3 id="2-平方根和n-次方根（自动调整形式、仅符号形式）"><a href="#2-平方根和n-次方根（自动调整形式、仅符号形式）" class="headerlink" title="2. 平方根和n 次方根（自动调整形式、仅符号形式）"></a>2. 平方根和n 次方根（自动调整形式、仅符号形式）</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\sqrt</span>&#123;x&#125;<span class="keyword">\qquad</span><span class="keyword">\sqrt</span>&#123;x<span class="built_in">^</span>2+<span class="keyword">\sqrt</span> y&#125; <span class="keyword">\qquad</span><span class="keyword">\sqrt</span>[3]2<span class="keyword">\qquad</span><span class="keyword">\surd</span>[x<span class="built_in">^</span>2+y<span class="built_in">^</span>2]<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\sqrt{x}\qquad\sqrt{x^2+\sqrt y} \qquad\sqrt[3]2\qquad\surd[x^2+y^2]$$</p><h3 id="3-水平线（上方、下方）"><a href="#3-水平线（上方、下方）" class="headerlink" title="3. 水平线（上方、下方）"></a>3. 水平线（上方、下方）</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\overline</span>&#123;m+n&#125;<span class="keyword">\qquad</span> <span class="keyword">\underline</span>&#123;m+n&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\overline{m+n}\qquad \underline{m+n}$$</p><h3 id="4-括号（大小调整、隐藏形式）"><a href="#4-括号（大小调整、隐藏形式）" class="headerlink" title="4. 括号（大小调整、隐藏形式）"></a>4. 括号（大小调整、隐藏形式）</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>f(x,y,z) = 3y<span class="built_in">^</span>2z <span class="keyword">\left</span>( 3+<span class="keyword">\frac</span>&#123;7x+5&#125;&#123;1+y<span class="built_in">^</span>2&#125; <span class="keyword">\right</span>)<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\left</span>.&#123;<span class="keyword">\rm</span> d&#125;u <span class="keyword">\over</span> &#123;<span class="keyword">\rm</span> d&#125;x <span class="keyword">\right</span>|<span class="built_in">_</span>&#123;x=0&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$f(x,y,z) &#x3D; 3y^2z\left ( 3+\frac{7x+5}{1+y^2} \right)$$<br>$$ \left.{\rm d}u \over {\rm d}x \right|_{x&#x3D;0}$$</p><h3 id="5-水平大括号"><a href="#5-水平大括号" class="headerlink" title="5. 水平大括号"></a>5. 水平大括号</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\underbrace</span>&#123;a+b+<span class="keyword">\dots</span>+z&#125;<span class="built_in">_</span>&#123;26&#125; <span class="keyword">\qquad</span> <span class="keyword">\overbrace</span>&#123;0+1+<span class="keyword">\dots</span>+9&#125;<span class="built_in">^</span>&#123;10&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\underbrace{a+b+\dots+z}_{26}\qquad \overbrace{0+1+\dots+9}^{10}$$</p><h3 id="6-公式大括号"><a href="#6-公式大括号" class="headerlink" title="6. 公式大括号"></a>6. 公式大括号</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>f(x)=<span class="keyword">\left</span><span class="keyword">\\</span>&#123;<span class="keyword">\begin</span>&#123;aligned&#125;x <span class="built_in">&amp;</span>=<span class="built_in">&amp;</span> <span class="keyword">\cos</span>(t) <span class="keyword">\\</span><span class="keyword">\\</span>y <span class="built_in">&amp;</span>=<span class="built_in">&amp;</span> <span class="keyword">\sin</span>(t) <span class="keyword">\\</span><span class="keyword">\\</span>z <span class="built_in">&amp;</span>=<span class="built_in">&amp;</span> <span class="keyword">\frac</span> xy<span class="keyword">\end</span>&#123;aligned&#125;<span class="keyword">\right</span>.<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>F<span class="built_in">^</span>&#123;HLLC&#125;=<span class="keyword">\left</span><span class="keyword">\\</span>&#123;<span class="keyword">\begin</span>&#123;array&#125;&#123;rcl&#125;F<span class="built_in">_</span>L<span class="built_in">&amp;</span><span class="built_in">&amp;</span>&#123;0&lt;S<span class="built_in">_</span>L&#125;<span class="keyword">\\</span><span class="keyword">\\</span>F<span class="built_in">^</span>*<span class="built_in">_</span>L<span class="built_in">&amp;</span><span class="built_in">&amp;</span>&#123;S<span class="built_in">_</span>L <span class="keyword">\leq</span> 0 &lt; S<span class="built_in">_</span>M&#125;<span class="keyword">\\</span><span class="keyword">\\</span>F<span class="built_in">^</span>*<span class="built_in">_</span>R<span class="built_in">&amp;</span><span class="built_in">&amp;</span>&#123;S<span class="built_in">_</span>M<span class="keyword">\leq</span>0&lt;S<span class="built_in">_</span>R&#125;<span class="keyword">\\</span><span class="keyword">\\</span>F<span class="built_in">_</span>R<span class="built_in">&amp;</span><span class="built_in">&amp;</span>S<span class="built_in">_</span>R<span class="keyword">\leq</span>0 <span class="keyword">\end</span>&#123;array&#125;<span class="keyword">\right</span>.<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>f(x)=<span class="keyword">\begin</span>&#123;cases&#125;0<span class="built_in">&amp;</span>&#123;x=0&#125;<span class="keyword">\\</span><span class="keyword">\\</span> 1<span class="built_in">&amp;</span>&#123;x<span class="keyword">\neq</span> 0&#125;<span class="keyword">\end</span>&#123;cases&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$f(x)&#x3D;\left\{\begin{aligned}x &amp;&#x3D;&amp; \cos(t) \\y &amp;&#x3D;&amp; \sin(t) \\z &amp;&#x3D;&amp; \frac xy\end{aligned}\right.$$<br>$$F^{HLLC}&#x3D;\left\{\begin{array}{rcl}F_L&amp;&amp;{0&lt;S_L} \\F^*_L&amp;&amp;{S_L \leq 0 &lt; S_M} \\F^*_R&amp;&amp;{S_M\leq0&lt;S_R} \\F_R&amp;&amp;S_R\leq0 \end{array}\right.$$</p><p>$$f(x)&#x3D;\begin{cases}0&amp;{x&#x3D;0} \\ 1&amp;{x\neq 0}\end{cases}$$</p><h3 id="7-向量"><a href="#7-向量" class="headerlink" title="7. 向量"></a>7. 向量</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\vec</span> a<span class="keyword">\qquad</span> <span class="keyword">\overrightarrow</span> &#123;AB&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\vec a\qquad \overrightarrow {AB}$$</p><h3 id="8-分数"><a href="#8-分数" class="headerlink" title="8. 分数"></a>8. 分数</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>1<span class="keyword">\frac</span>&#123;1&#125;&#123;2&#125;hours<span class="keyword">\qquad</span> <span class="keyword">\frac</span>&#123;x<span class="built_in">^</span>2&#125;&#123;k+1&#125; <span class="keyword">\qquad</span> x<span class="built_in">^</span>&#123;<span class="keyword">\frac</span>&#123;2&#125;&#123;k+1&#125;&#125; <span class="keyword">\qquad</span> x<span class="built_in">^</span>&#123;1/2&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span>1 <span class="keyword">\over</span> 2<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$1\frac12hours\qquad \frac{x^2}{k+1} \qquad x^{\frac{2}{k+1}} \qquad x^{1&#x2F;2}$$<br>$$1 \over 2$$</p><h3 id="9-省略号（与底线对齐、与中线对齐）"><a href="#9-省略号（与底线对齐、与中线对齐）" class="headerlink" title="9. 省略号（与底线对齐、与中线对齐）"></a>9. 省略号（与底线对齐、与中线对齐）</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>f(x<span class="built_in">_</span>1,x<span class="built_in">_</span>x,<span class="keyword">\ldots</span>,x<span class="built_in">_</span>n) = x<span class="built_in">_</span>1<span class="built_in">^</span>2 + x<span class="built_in">_</span>2<span class="built_in">^</span>2 + <span class="keyword">\cdots</span> + x<span class="built_in">_</span>n<span class="built_in">^</span>2 <span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$f(x_1,x_x,\ldots,x_n) &#x3D; x_1^2 + x_2^2 + \cdots + x_n^2 $$ </p><h3 id="10-积分运算符和求和运算符和乘积运算符"><a href="#10-积分运算符和求和运算符和乘积运算符" class="headerlink" title="10. 积分运算符和求和运算符和乘积运算符"></a>10. 积分运算符和求和运算符和乘积运算符</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\sum</span><span class="built_in">_</span>&#123;x=1&#125;<span class="built_in">^</span>&#123;n&#125;<span class="keyword">\qquad</span> <span class="keyword">\sum</span><span class="keyword">\limits</span><span class="built_in">_</span>&#123;i=1&#125;<span class="built_in">^</span>n <span class="keyword">\qquad</span> <span class="keyword">\int</span><span class="built_in">_</span>0<span class="built_in">^</span>&#123;<span class="keyword">\frac</span><span class="keyword">\pi</span>2&#125; <span class="keyword">\qquad</span> <span class="keyword">\prod</span><span class="keyword">\limits</span><span class="built_in">_</span><span class="keyword">\epsilon</span><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\sum_{x&#x3D;1}^{n}\qquad \sum\limits_{i&#x3D;1}^n \qquad \int_0^{\frac\pi2} \qquad \prod\limits_\epsilon$$</p><h3 id="11-极限"><a href="#11-极限" class="headerlink" title="11. 极限"></a>11. 极限</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\lim</span><span class="keyword">\limits</span><span class="built_in">_</span>&#123;n<span class="keyword">\rightarrow</span>+<span class="keyword">\infty</span>&#125;<span class="keyword">\frac</span> 1&#123;n(n+1)&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\lim\limits_{n\rightarrow+\infty}\frac 1{n(n+1)}$$</p><h3 id="12-多行数学公式"><a href="#12-多行数学公式" class="headerlink" title="12. 多行数学公式"></a>12. 多行数学公式</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\begin</span>&#123;eqnarray&#125;<span class="keyword">\cos</span> 2<span class="keyword">\theta</span> <span class="built_in">&amp;</span> = <span class="built_in">&amp;</span> cos<span class="built_in">^</span>2 <span class="keyword">\theta</span> - <span class="keyword">\sin</span><span class="built_in">^</span>2 <span class="keyword">\theta</span> <span class="keyword">\\</span><span class="keyword">\\</span> <span class="built_in">&amp;</span> = <span class="built_in">&amp;</span> 2 cos<span class="built_in">^</span>2 <span class="keyword">\theta</span>- 1.<span class="keyword">\end</span>&#123;eqnarray&#125;<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\begin{eqnarray}\cos2\theta&amp;&#x3D;&amp; \cos^2\theta-\sin^2\theta \\ &amp; &#x3D; &amp; 2 \cos^2\theta-1.\end{eqnarray}$$</p><h3 id="13-矩阵"><a href="#13-矩阵" class="headerlink" title="13. 矩阵"></a>13. 矩阵</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\left</span>( <span class="keyword">\begin</span>&#123;array&#125;&#123;&#125;a<span class="built_in">&amp;</span>b<span class="built_in">&amp;</span>c <span class="keyword">\\</span><span class="keyword">\\</span> d<span class="built_in">&amp;</span>e<span class="built_in">&amp;</span>f <span class="keyword">\\</span><span class="keyword">\\</span> g<span class="built_in">&amp;</span>h<span class="built_in">&amp;</span>i <span class="keyword">\end</span>&#123;array&#125; <span class="keyword">\right</span>)<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span><span class="keyword">\chi</span>(<span class="keyword">\lambda</span>)=<span class="keyword">\left</span>|<span class="keyword">\begin</span>&#123;array&#125;&#123;ccc&#125;<span class="keyword">\lambda</span>-a<span class="built_in">&amp;</span>-b<span class="built_in">&amp;</span>-c<span class="keyword">\-</span>d<span class="built_in">&amp;</span><span class="keyword">\lambda</span>-e<span class="built_in">&amp;</span>-f<span class="keyword">\-</span>g<span class="built_in">&amp;</span>-h<span class="built_in">&amp;</span><span class="keyword">\lambda</span>-i <span class="keyword">\end</span>&#123;array&#125;<span class="keyword">\right</span>|<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$\left( \begin{array}{}a&amp;b&amp;c \\ d&amp;e&amp;f \\ g&amp;h&amp;i \end{array} \right)$$<br>$$ \chi(\lambda) &#x3D; \left| \begin{array}{ccc} \lambda - a &amp; -b &amp; -c \\ -d &amp; \lambda - e &amp; -f \\ -g &amp; -h &amp; \lambda - i \end{array} \right|$$</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>由于mathjax的配置以及网页渲染的方式各不相同，公式中的<code>\\</code>可能被转义成<code>\</code>，这是需要<code>\\\\</code>来表达<code>\\</code>。</li><li>渲染后的公式可能会过长导致显示不全，这时需要对公式所属元素配置CSS，一种解决方案如下：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.MJXc-display</span></span><br><span class="line">  <span class="attribute">overflow-x</span>: scroll</span><br><span class="line">  <span class="attribute">overflow-y</span>: hidden</span><br></pre></td></tr></table></figure>详见<a href="https://github.com/rochero/blog/raw/master/nshort.pdf">一份不太简短的$\LaTeX2_{\varepsilon}$介绍</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学 </tag>
            
            <tag> LaTeX </tag>
            
            <tag> MathJax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三角函数常用公式</title>
      <link href="/2020/01/12/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/"/>
      <url>/2020/01/12/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="平方关系"><a href="#平方关系" class="headerlink" title="平方关系"></a>平方关系</h2><p>$$sin^2\alpha+cos^2\alpha&#x3D;1 \qquad 1+tan^2\alpha&#x3D;sec^2\alpha \qquad 1+cot^2\alpha&#x3D;csc^2\alpha$$</p><h2 id="倒数关系"><a href="#倒数关系" class="headerlink" title="倒数关系"></a>倒数关系</h2><p>$$<br>sin\alpha\ csc\alpha &#x3D; 1 \qquad cos\alpha \ sec\alpha &#x3D; 1 \qquad \tan\alpha \ cot\alpha &#x3D; 1<br>$$</p><h2 id="商数关系"><a href="#商数关系" class="headerlink" title="商数关系"></a>商数关系</h2><p>$$<br>tan\alpha &#x3D; {sin\alpha \over cos\alpha} \qquad cot\alpha &#x3D; {cos\alpha \over sin\alpha}<br>$$</p><h2 id="两角和差公式"><a href="#两角和差公式" class="headerlink" title="两角和差公式"></a>两角和差公式</h2><p>$$<br>sin(\alpha\pm\beta)&#x3D;sin\alpha cos\beta \pm cos\alpha sin\beta \qquad<br>cos(\alpha\pm\beta)&#x3D;cos\alpha cos\beta \mp sin\alpha sin\beta<br>$$</p><h2 id="积化和差公式"><a href="#积化和差公式" class="headerlink" title="积化和差公式"></a>积化和差公式</h2><p>$$<br>sin\alpha \cdot cos\beta &#x3D; {1 \over 2}[sin(\alpha+\beta) + sin(\alpha-\beta)] \qquad<br>cos\alpha \cdot sin\beta &#x3D; {1 \over 2}[sin(\alpha+\beta) - sin(\alpha-\beta)] \qquad<br>cos\alpha \cdot cos\beta &#x3D; {1 \over 2}[cos(\alpha+\beta) + cos(\alpha-\beta)] \qquad<br>sin\alpha \cdot sin\beta &#x3D; -{1 \over 2}[cos(\alpha+\beta) - cos(\alpha-\beta)]<br>$$</p><h2 id="和差化积公式"><a href="#和差化积公式" class="headerlink" title="和差化积公式"></a>和差化积公式</h2><p>$$<br>sin\alpha + sin \beta &#x3D; 2sin{\alpha+\beta \over 2}cos{\alpha - \beta \over 2} \qquad<br>sin\alpha - sin \beta &#x3D; 2cos{\alpha+\beta \over 2}sin{\alpha - \beta \over 2} \qquad<br>cos\alpha + cos \beta &#x3D; 2cos{\alpha+\beta \over 2}cos{\alpha - \beta \over 2} \qquad<br>cos\alpha - cos \beta &#x3D; 2sin{\alpha+\beta \over 2}sin{\alpha - \beta \over 2}<br>$$</p><h2 id="常用倍角公式"><a href="#常用倍角公式" class="headerlink" title="常用倍角公式"></a>常用倍角公式</h2><p>$$<br>sin2\alpha  &#x3D; 2sin\alpha cos\alpha \qquad<br>cos2\alpha &#x3D; cos^2\alpha - sin^2\alpha &#x3D; 2cos^2\alpha-1&#x3D;1-2sin^2\alpha \qquad<br>sin3\alpha &#x3D; 3sin\alpha-4sin^3\alpha \qquad<br>cos3\alpha &#x3D; 4cos^3\alpha-3cos\alpha<br>$$</p><h2 id="降幂公式"><a href="#降幂公式" class="headerlink" title="降幂公式"></a>降幂公式</h2><p>$$<br>sin^2\alpha &#x3D; {1-cos2\alpha \over 2} \qquad<br>cos^2\alpha &#x3D; {1+cos\alpha \over 2} \qquad<br>sin^3\alpha &#x3D; {3sin\alpha-sin3\alpha \over 4} \qquad<br>cos^3\alpha &#x3D; {3cos\alpha+cos3\alpha \over 4}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>希腊字母简表及发音</title>
      <link href="/2020/01/12/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8%E5%8F%8A%E8%8B%B1%E8%AF%AD%E8%AF%BB%E9%9F%B3/"/>
      <url>/2020/01/12/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8%E5%8F%8A%E8%8B%B1%E8%AF%AD%E8%AF%BB%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="希腊字母简表（以下均为英语读法，非希腊语本音）"><a href="#希腊字母简表（以下均为英语读法，非希腊语本音）" class="headerlink" title="希腊字母简表（以下均为英语读法，非希腊语本音）"></a><strong>希腊字母简表</strong>（以下均为英语读法，非希腊语本音）</h2><table><thead><tr><th>字母名称</th><th>国际音标</th><th>大写字母</th><th>小写字母</th><th>字母名称</th><th>国际音标</th><th>大写字母</th><th>小写字母</th></tr></thead><tbody><tr><td>alpha</td><td>&#x2F;‘ælfə&#x2F;</td><td>Α</td><td>α</td><td>nu</td><td>&#x2F;nju:&#x2F;</td><td>Ν</td><td>ν</td></tr><tr><td>beta</td><td>&#x2F;‘bi:tə&#x2F;或 &#x2F;‘beɪtə&#x2F;</td><td>Β</td><td>β</td><td>xi</td><td>希腊 &#x2F;ksi&#x2F;；英美 &#x2F;ˈzaɪ&#x2F; 或 &#x2F;ˈksaɪ&#x2F;</td><td>Ξ</td><td>ξ</td></tr><tr><td>gamma</td><td>&#x2F;‘gæmə&#x2F;</td><td>Γ</td><td>γ</td><td>omicron</td><td>&#x2F;əuˈmaikrən&#x2F;或 &#x2F;ˈɑmɪˌkrɑn&#x2F;</td><td>Ο</td><td>ο</td></tr><tr><td>delta</td><td>&#x2F;‘deltə&#x2F;</td><td>Δ</td><td>δ</td><td>pi</td><td>&#x2F;paɪ&#x2F;</td><td>Π</td><td>π</td></tr><tr><td>epsilon</td><td>&#x2F;‘epsɪlɒn&#x2F;</td><td>Ε</td><td>ε</td><td>rho</td><td>&#x2F;rəʊ&#x2F;</td><td>Ρ</td><td>ρ</td></tr><tr><td>zeta</td><td>&#x2F;‘zi:tə&#x2F;</td><td>Ζ</td><td>ζ</td><td>sigma</td><td>&#x2F;‘sɪɡmə&#x2F;</td><td>Σ</td><td>σ ς</td></tr><tr><td>eta</td><td>&#x2F;‘i:tə&#x2F;</td><td>Η</td><td>η</td><td>tau</td><td>&#x2F;tɔ:&#x2F; 或 &#x2F;taʊ&#x2F;</td><td>Τ</td><td>τ</td></tr><tr><td>theta</td><td>&#x2F;‘θi:tə&#x2F;</td><td>Θ</td><td>θ</td><td>upsilon</td><td>&#x2F;ˈipsilon&#x2F;或 &#x2F;ˈʌpsɨlɒn&#x2F;</td><td>Υ</td><td>υ</td></tr><tr><td>iota</td><td>&#x2F;aɪ’əʊtə&#x2F;</td><td>Ι</td><td>ι ℩</td><td>phi</td><td>&#x2F;faɪ&#x2F;</td><td>Φ</td><td>φ</td></tr><tr><td>kappa</td><td>&#x2F;‘kæpə&#x2F;</td><td>Κ</td><td>κ</td><td>chi</td><td>&#x2F;kaɪ&#x2F;</td><td>Χ</td><td>χ</td></tr><tr><td>lambda</td><td>&#x2F;‘læmdə&#x2F;</td><td>Λ</td><td>λ</td><td>psi</td><td>&#x2F;psaɪ&#x2F;</td><td>Ψ</td><td>ψ</td></tr><tr><td>mu</td><td>&#x2F;mju:&#x2F;</td><td>Μ</td><td>μ</td><td>omega</td><td>&#x2F;‘əʊmɪɡə&#x2F;或 &#x2F;oʊ’meɡə&#x2F;</td><td>Ω</td><td>ω</td></tr></tbody></table><ul><li>alpha常用作形容词，以显示某件事物中最重要或最初的。</li><li>beta也能表示电脑软件的测试版，通常指的是公开测试版，提供一般使用者协助测试并回报问题。</li><li>Ι ι ℩ 有时用来表示微细的差别。</li><li>Δ在初中数学里也表示一元二次方程的判别式，事实上，不少希腊字母被用在数学和物理上。</li><li>Ο ο Omicron(国际音标&#x2F;‘ɑmɪ,krɑn&#x2F;)字面上的意思是“小的O”，以便与“大O”区别。</li><li>Σ σ ς 在<a href="https://baike.baidu.com/item/%E5%B8%8C%E8%85%8A">希腊</a>语中，如果一个单词的最末一个字母是小写σ，要把该字母写成 ς。</li><li>Ψ ψ 意为神秘的、未知的。</li><li>Ω ω 用作指事情的终结，对应指开始的alpha。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 搬运 </tag>
            
            <tag> 英语 </tag>
            
            <tag> 语音 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>具体数学-汉诺塔问题</title>
      <link href="/2018/10/01/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/"/>
      <url>/2018/10/01/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>设$T_n$：将$n$个圆盘从一根桩移动到另一根桩所需最少移动次数。</p><p>思路：先把$n-1$个小的圆盘移动到另一个桩上（需要$T_{n-1}$次），再移动最大的圆盘（需要$1$次），最后将$n-1$个小圆盘移到最大圆盘上（需要$T_{n-1}$次）。</p><p>$$<br>T_n&#x3D;2T_{n-1}+1,n&gt;0<br>$$</p><p>$$<br>T_n &#x3D; 2^n-1, n \geqslant 0<br>$$</p><p>关键词： 数学归纳法（mathematical  induction）</p><h2 id="C-实现显示汉诺塔的移动步骤"><a href="#C-实现显示汉诺塔的移动步骤" class="headerlink" title="C++实现显示汉诺塔的移动步骤"></a>C++实现显示汉诺塔的移动步骤</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> g_cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Move</span><span class="params">(<span class="type">char</span> src, <span class="type">char</span> dst)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; src &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; dst &lt;&lt; endl;</span><br><span class="line">    ++g_cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> src, <span class="type">char</span> tmp, <span class="type">char</span> dst)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Move</span>(src, dst);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Hanoi</span>(n<span class="number">-1</span>, src, dst, tmp);</span><br><span class="line"><span class="built_in">Move</span>(src, dst);</span><br><span class="line"><span class="built_in">Hanoi</span>(n<span class="number">-1</span>, tmp, src, dst);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">Hanoi</span>(n, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    cout &lt;&lt; g_cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 题目 </tag>
            
            <tag> 加工 </tag>
            
            <tag> 书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刘汝佳算法竞赛指南-hints</title>
      <link href="/2018/08/09/%E5%88%98%E6%B1%9D%E4%BD%B3%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E6%8C%87%E5%8D%97hints/"/>
      <url>/2018/08/09/%E5%88%98%E6%B1%9D%E4%BD%B3%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E6%8C%87%E5%8D%97hints/</url>
      
        <content type="html"><![CDATA[<p>1-1：整数值用%d输出，实数用%f输出。<br>1-2：整数&#x2F;整数&#x3D;整数，浮点数&#x2F;浮点数&#x3D;浮点数。<br>1-3：<code>scanf</code>中的占位符和变量的数据类型应一一对应，且每个变量前需要加<code>&amp;</code>符号。<br>1-4：在算法竞赛中，输入前不要打印提示信息。输出完毕后应立即终止程序，不要等待用户按键，因为输入输出过程都是自动的，没有人工干预。<br>1-5：在算法竞赛中不要使用头文件<code>conio.h</code>，包括<code>getch()</code>、<code>clrscr()</code>等函数。<br>1-6：在算法竞赛中，每行输出均应以回车符结束，包括最后一行。除非特别说明，每行的行首不应有空格，但行末通常可以有多余空格。另外，输出的每两个数或者字符串之间应以单个空格隔开。<br>1-7：尽量用<code>const</code>关键字声明常数。<br>1-8：赋值是个动作，先计算右边的值，再赋给左边的变量，覆盖它原来的值。<br>1-9：<code>printf</code>的格式字符串中可以包含其他可打印符号，打印时原样输出。<br>1-10：算法竞赛的题目应当是严密的，各种情况下的输出均应有严格规定。如果在比赛中发现题目有漏洞，应向相关人员询问，尽量不要自己随意假定。<br>1-11：赋值<code>a = b</code>之后，变量a原来的值被覆盖，而b的值不变。<br>1-12：可以通过手工模拟的方法理解程序的执行方式，重点在于记录每条语句执行之后各个变量的值。<br>1-13：交换两个变量的三变量法适用范围广，推荐使用。<br>1-14：算法竞赛是在比谁能更好地解决问题，而不是在比谁写的程序看上去更高级。<br>1-15：<code>if</code>语句的基本格式为：<code>if</code>（条件）语句1；<code>else</code>语句2。<br>1-16：<code>if</code>语句的条件是一个逻辑表达式，它的值可能为真，也可能为假。单个整数值也可以表示真假，其中0为假，其他值为真。<br>1-17：C语言中的逻辑运算符都是短路运算符。一旦能够确定整个表达式的值，就不再继续计算。<br>1-18：算法竞赛的目标是编程对任意输入均得到正确的结果，而不仅是样例数据。<br>1-19：如果有多个并列、情况不交叉的条件需要一一处理，可以用<code>else if</code>语句。<br>1-20：适当在程序中编写注释不仅能让其他用户更快地搞懂你的程序，还能帮你自己理清思路。<br>1-21：可以用花括号把若干条语句组合成一个整体。这些语句仍然按顺序执行。 </p><p>2-1：<code>for</code>循环的格式为：<code>for</code>（初始化；条件；调整）循环体；<br>2-2：尽管<code>for</code>循环反复执行相同的语句，但这些语句每次的执行效果往往不同。<br>2-3：编写程序时，要特别留意“当前行”的跳转和变量的改变。<br>2-4：建议尽量缩短变量的定义范围。例如，在for循环的初始化部分定义循环变量。<br>2-5：不拘一格地使用伪代码来思考和描述算法是一种值得推荐的做法。<br>2-6：把伪代码改写成代码时，一般先选择较为容易的任务来完成。<br>2-7：浮点运算可能存在误差。在进行浮点数比较时，应考虑到浮点误差。<br>2-8：<code>while</code>循环的格式为“<code>while</code>（条件）循环体；”。<br>2-9：当需要统计某种事物的个数时，可以用一个变量来充当计数器。<br>2-10：不要忘记测试。一个看上去正确的程序可能隐含错误。<br>2-11：在观察无法找出错误时，可以用“输出中间结果”的方法查错。<br>2-12：C99并没有规定<code>int</code>类型的确切大小，但在当前流行的竞赛平台中，<code>int</code>都是32位整数，范围是-2147483648～2147483647。<br>2-13：<code>long long</code>在Linux下的输入输出格式符为<code>％lld</code>，但Windows平台中有时为<code>％I64d</code>。为保险起见，可以用后面介绍的C＋＋流，或者编写自定义输入输出函数。<br>2-14：<code>do-while</code>循环的格式为“<code>do</code>{循环体}<code>while</code>（条件）；”，其中循环体至少执行一次，每次执行完循环体后判断条件，当条件满足时继续循环。<br>2-15：在循环体开始处定义的变量，每次执行循环体时会重新声明并初始化。<br>2-16：要计算只包含加法、减法和乘法的整数表达式除以正整数n的余数，可以在每步计算之后对n取余，结果不变。<br>2-17：可以使用<code>time.h</code>和<code>clock（）</code>函数获得程序运行时间。常数<code>CLOCKS_PER_SEC</code>和操作系统相关，请不要直接使用<code>clock（）</code>的返回值，而应总是除以<code>CLOCKS_PER_SEC</code>。<br>2-18：很多程序的运行时间与规模n存在着近似的简单关系。可以通过计时函数来发现或验证这一关系。<br>2-19：在Windows下，输入完毕后先按<code>Enter</code>键，再按<code>Ctrl＋Z</code>键，最后再按<code>Enter</code>键，即可结束输入。在Linux下，输入完毕后按<code>Ctrl＋D</code>键即可结束输入。<br>2-20：变量在未赋值之前的值是不确定的。特别地，它不一定等于0。<br>2-21：请在比赛之前了解文件读写的相关规定：是标准输入输出（也称标准I&#x2F;O，即直接读键盘、写屏幕），还是文件输入输出？如果是文件输入输出，是否禁止用重定向方式访问文件？<br>2-22：在算法竞赛中，选手应严格遵守比赛的文件名规定，包括程序文件名和输入输出文件名。不要弄错大小写，不要拼错文件名，不要使用绝对路径或相对路径。<br>2-23：在算法竞赛中，有经验的选手往往会使用条件编译指令并且将重要的测试语句注释掉而非删除。<br>2-24：在算法竞赛中，如果不允许使用重定向方式读写数据，应使用<code>fopen</code>和<code>fscanf/fprintf</code>进行输入输出。<br>2-25：在算法竞赛中，偶尔会出现输入输出错误的情况。如果程序鲁棒性强，有时能在数据有瑕疵的情况下仍然给出正确的结果。程序的鲁棒性在工程中也非常重要。<br>2-26：在多数据的题目中，一个常见的错误是：在计算完一组数据后某些变量没有重置，影响到下组数据的求解。<br>2-27：当嵌套的两个代码块中有同名变量时，内层的变量会屏蔽外层变量，有时会引起十分隐蔽的错误。<br>2-28：用编译选项-Wall编译程序时，会给出很多（但不是所有）警告信息，以帮助程序员查错。但这并不能解决所有的问题：有些“错误”程序是合法的，只是这些动作不是所期望的。  </p><p>3-1：语句“<code>int a[maxn]</code>”声明了一个包含maxn个整型变量的数组，即a[0]，a[1]，…，a[maxn-1]，但不包含a[maxn]。maxn必须是常数，不能是变量。<br>3-2：在算法竞赛中，常常难以精确计算出需要的数组大小，数组一般会声明得稍大一些。在空间够用的前提下，浪费一点不会有太大影响。<br>3-3：对于变量n，n＋＋和＋＋n都会给n加1，但当它们用在一个表达式中时，行为有所差别：n＋＋会使用加1前的值计算表达式，而＋＋n会使用加1后的值计算表达式。“＋＋”运算符是C语言的特色之一。<br>3-4：比较大的数组应尽量声明在<code>main</code>函数外，否则程序可能无法运行。<br>3-5：可以用“<code>int a[maxn][maxm]</code>”生成一个整型的二维数组，其中maxn和maxm不必相等。这个数组共有maxn×maxm个元素，分别为a[0][0], a[0][1],…, a[0][maxm-1], a[1][0],a[1][1],…,a[1][maxm-1],…,a[maxn-1][0],a[maxn-1][1],…, a[maxn-1][maxm -1]。<br>3-6：可以利用C语言简洁的语法，但前提是保持代码的可读性。<br>3-7：在很多情况下，最好是在做一件事之前检查是不是可以做，而不要做完再后悔。因为“悔棋”往往比较麻烦。<br>3-8：C语言中的字符型用关键字char表示，它实际存储的是字符的ASCII码。字符常量可以用单引号法表示。在语法上可以把字符当作int型使用。<br>3-9：在“<code>scanf(&quot;%s&quot;, s)</code>”中，不要在s前面加上“&amp;”符号。如果是字符串数组<code>char s\[maxn][maxl]</code>，可以用“<code>scanf(&quot;%s&quot;, s[i])</code>”读取第i个字符串。注意，“<code>scanf(&quot;%s&quot;, s)</code>”遇到空白字符会停下来。<br>3-10：可以用<code>sprintf</code>把信息输出到字符串，用法和<code>printf</code>、<code>fprintf</code>类似。但应当保证字符串足够大，可以容纳输出信息。<br>3-11：C语言中的字符串是以“\0”结尾的字符数组，可以用<code>strlen(s)</code>返回字符串s中结束标记之前的字符个数。字符串中的各个字符是s[0], s[1],…,s[strlen(s)-1]。<br>3-12：由于字符串的本质是数组，它也不是“一等公民”，只能用<code>strcpy(a, b)</code>, <code>strcmp(a, b)</code>, <code>strcat(a, b)</code>来执行“赋值”、“比较”和“连接”操作，而不能用“&#x3D;”、“&#x3D;&#x3D;”、“&lt;&#x3D;”、“+”等运算符。上述函数都在<code>string.h</code>中声明。<br>3-13：滥用“++”、“—”、“+&#x3D;”等可以修改变量值的运算符很容易带来隐蔽的错误。建议每条语句最多只用一次这种运算符，并且所修改的变量在整条语句中只出现一次。<br>3-14：使用<code>fgetc(fin)</code>可以从打开的文件fin中读取一个字符。一般情况下应当在检查它不是EOF后再将其转换成char值。从标准输入读取一个字符可以用<code>getchar</code>，它等价于<code>fgetc(stdin)</code>。<br>3-15：在使用<code>fgetc</code>和<code>getchar</code>时，应该避免写出和操作系统相关的程序。<br>3-16：”<code>fgets(buf, maxn, fin)</code>“将读取完整的一行放在字符数组buf中。应当保证buf足够存放下文件的一行内容。除了在文件结束前没有遇到“\n”这种特殊情况外，buf总是以“\n”结尾。当一个字符都没有读到时，<code>fgets</code>返回NULL。<br>3-17：C语言并不禁止程序读写”非法内存”。例如，声明的是<code>char s[100]</code>，完全可以赋值<code>s[10000] = &#39;a&#39;</code>（甚至-Wall也不会警告），但后果自负。<br>3-18：C语言中的<code>gets(s)</code>存在缓冲区溢出漏洞，不推荐使用。在C11标准里，该函数已被正式删除。<br>3-19：善用常量数组往往能简化代码。定义常量数组时无须指明大小，编译器会计算。<br>3-20：头文件<code>ctype.h</code>中定义的<code>isalpha</code>、<code>isdigit</code>、<code>isprint</code>等工具可以用来判断字符的属性，而<code>toupper</code>、<code>tolower</code>等工具可以用来转换大小写。如果ch是大写字母，则ch-‘A’就是它在字母表中的序号（A的序号是0，B的序号是1，依此类推）；类似地，如果ch是数字，则ch-‘0’就是这个数字的数值本身。<br>3-21：字符还可以直接用ASCII码表示。如果用八进制，应该写成：“\o”，“\oo”或“\ooo”（o为一个八进制数字）；如果用十六进制，应该写成“\xh”（h为十六进制数字串）。<br>3-22：在多数计算机内部，整数采用的是补码表示法。  </p><p>4-1：C语言中的数学函数可以定义成“返回类型 函数名(参数列表) { 函数体 }”，其中函数体的最后一条语句应该是“<code>return</code> 表达式；”。<br>4-2：函数的参数和返回值最好是“一等公民”，如<code>int</code>、<code>char</code>或者<code>double</code>等。其他“非一等公民”作为参数和返回值要复杂一些。如果函数不需要返回值，则返回类型应写成<code>void</code>。<br>4-3：如果在执行函数的过程中碰到了return语句，将直接退出这个函数，不去执行后面的语句。相反，如果在执行过程中始终没有return语句，则会返回一个不确定的值。幸好，-Wall可以捕捉到这一可疑情况并产生警告。<br>4-4：在算法竞赛中，请总是让main函数返回0。<br>4-5：在C语言中，定义结构体的方法为“struct 结构体名称{ 域定义 };”，注意花括号的后面还有一个分号。<br>4-6：为了使用方便，往往用“typedef struct { 域定义; }类型名;”的方式定义一个新类型名。这样，就可以像原生数据类型一样使用这个自定义类型。<br>4-7：即使最终答案在所选择的数据类型范围之内，计算的中间结果仍然可能溢出。<br>4-8：对复杂的表达式进行化简有时不仅能减少计算量，还能减少甚至避免中间结果溢出。<br>4-9：建议把谓词（用来判断某事物是否具有某种特性的函数）命名成“is_xxx”的形式，返回int值，非0表示真，0表示假。<br>4-10：编写函数时，应尽量保证该函数能对任何合法参数得到正确的结果。如若不然，应在显著位置标明函数的缺陷，以避免误用。<br>4-11：函数的形参和在函数内声明的变量都是该函数的局部变量。无法访问其他函数的局部变量。局部变量的存储空间是临时分配的，函数执行完毕时，局部变量的空间将被释放，其中的值无法保留到下次使用。在函数外声明的变量是全局变量，可以被任何函数使用。操作全局变量有风险，应谨慎使用。<br>4-12：C语言用调用栈（Call Stack）来描述函数之间的调用关系。调用栈由栈帧（Stack Frame）组成，每个栈帧对应着一个未运行完的函数。在gdb中可以用backtrace（简称bt）命令打印所有栈帧信息。若要用p命令打印一个非当前栈帧的局部变量，可以用frame命令选择另一个栈帧。<br>4-13：C语言的变量都是放在内存中的，而内存中的每个字节都有一个称为地址（address）的编号。每个变量都占有一定数目的字节（可用sizeof运算符获得），其中第一个字节的地址称为变量的地址。<br>4-14：用int* a声明的变量a是指向int型变量的指针。赋值a &#x3D; &amp;b的含义是把变量b的地址存放在指针a中，表达式*a代表a指向的变量，既可以放在赋值符号的左边（左值），也可以放在右边（右值）。<br>4-15：千万不要滥用指针，这不仅会把自己搞糊涂，还会让程序产生各种奇怪的错误。事实上，本书的程序会很少使用指针。<br>4-16：以数组为参数调用函数时，实际上只有数组首地址传递给了函数，需要另加一个参数表示元素个数。除了把数组首地址本身作为实参外，还可以利用指针加减法把其他元素的首地址传递给函数。<br>4-17：C语言支持递归，即函数可以直接或间接地调用自己。但要注意为递归函数编写终止条件，否则将产生无限递归。<br>4-18：由于使用了调用栈，C语言支持递归。在C语言中，调用自己和调用其他函数并没有本质不同。<br>4-19：在可执行文件中，正文段（Text Segment）用于储存指令，数据段（Data Segment）用于储存已初始化的全局变量，BSS段（BSS Segment）用于储存未赋值的全局变量所需的空间。<br>4-20：在运行时，程序会动态创建一个堆栈段，里面存放着调用栈，因此保存着函数的调用关系和局部变量。<br>4-21：在Linux中，栈大小并没有储存在可执行程序中，只能用ulimit命令修改；在Windows中，栈大小储存在可执行程序中，用gcc编译时可以通过-Wl,–stack&#x3D;&lt;byte count&gt;指定。  </p><p>5-1：C＋＋的精华与糟粕并存。本章介绍的C＋＋特性是算法竞赛中最常用的部分，虽然不是解题所必需的，但值得学习。<br>5-2：C＋＋能编译大多数C语言程序。虽然C语言中大多数头文件在C＋＋中仍然可以使用，但推荐的方法是在C头文件之前加一个小写的c字母，然后去掉.h后缀。<br>5-3：C＋＋中可以使用流简化输入输出操作。标准输入输出流在头文件iostream中定义，存在于名称空间std中。如果使用了using namespace std语句，则可以直接使用。<br>5-4：C＋＋中的引用就是变量的“别名”，它可以在一定程度上代替C中的指针。例如，可以用“传引用”的方式让函数内直接修改实参。<br>5-5：C＋＋在string头文件里定义了string类型，直接支持流式读写。string有很多方便的函数和运算符，但速度有些慢。<br>5-6：可以把string作为流进行读写，定义在sstream头文件中。<br>5-7：C＋＋中的结构体除了可以拥有成员变量（用a.x的方式访问）之外，还可以拥有成员函数（用a.add（1，2）的方式访问）。为了简单起见，本书中只使用struct而不使用class，但struct的很多概念和写法同样适用于class。<br>5-8：C＋＋中的结构体可以有一个或多个构造函数，在声明变量时调用。<br>5-9：C＋＋中的函数（不只是构造函数）参数可以拥有默认值。<br>5-10：在C＋＋结构体的成员函数中，this是指向当前对象的指针。<br>5-11：algorithm头文件中的sort可以给任意对象排序，包括内置类型和自定义类型，前提是类型定义了“&lt;”运算符。排序之后可以用lower_bound查找大于或等于x的第一个位置。待排序／查找的元素可以放在数组里，也可以放在vector里。<br>5-12：vector头文件中的vector是一个不定长数组，可以用clear( )清空，resize( )改变大小，用push_back( )和pop_back( )在尾部添加和删除元素，用empty( )测试是否为空。vector之间可以直接赋值或者作为函数的返回值，像是“一等公民”一样。<br>5-13：set头文件中的set和map头文件中的map分别是集合与映射。二者都支持insert、find、count和remove操作，并且可以按照从小到大的顺序循环遍历其中的元素。map还提供了“[]”运算符，使得map可以像数组一样使用。事实上，map也称为“关联数组”。<br>5-14：STL的stack头文件提供了栈，用“stack&lt;int&gt;s”方式定义，用push( )和pop( )实现元素的入栈和出栈操作，top( )取栈顶元素（但不删除）。<br>5-15：STL的queue头文件提供了队列，用“queue&lt;int&gt;s”方式定义，用push( )和pop( )进行元素的入队和出队操作，front( )取队首元素（但不删除）。<br>5-16：STL的queue头文件提供了优先队列，用“priority_queue&lt;int&gt;s”方式定义，用push( )和pop( )进行元素的入队和出队操作，top( )取队首元素（但不删除）。<br>5-17：库不一定没有bug，使用之前测试库是一个好习惯。<br>5-18：cstdlib中的rand( )可生成闭区间[0，RAND_MAX]内均匀分布的随机整数，其中RAND_MAX至少为32767。如果要生成更大的随机整数，在精度要求不太高的情况下可以用rand( )的结果“放大”得到。<br>5-19：可以用cstdlib中的srand函数初始化随机数种子。如果需要程序每次执行时使用一个不同的种子，可以用ctime中的time（NULL）为参数调用srand。一般来说，只在程序执行的开头调用一次srand。<br>5-20：把vector作为参数或者返回值时，应尽量改成用引用方式传递参数，以避免不必要的值被复制。<br>5-21：C＋＋支持函数重载，但函数的参数类型必须不同（不能只有返回值类型不同）。<br>5-22：测试时往往使用assert。其用法是“assert（表达式）”，当表达式为假时强行终止程序，并给出错误提示。<br>5-23：可以给结构体重载赋值运算符，使得用起来更方便。<br>5-24：可以给结构体声明一些属于该结构体类型的静态成员变量，方法是加上static修饰符。静态成员变量在结构体外部使用时要写成“结构体名：：静态成员变量名”。  </p><p>6-1：如果要在“队列”两端进行插入和删除，可以用STL中的双端队列deque。<br>6-2：简单的表达式解析可以借助栈来完成。<br>6-3：在数组中频繁移动元素是很低效的，如有可能，可以使用链表。<br>6-4：为了方便起见，常常在链表的第一个元素之前放一个虚拟结点。<br>6-5：在双向链表这样的复杂链式结构中，往往会编写一些辅助函数用来设置链接关系。<br>6-6：如果数据结构上的某一个操作很耗时，有时可以用加标记的方式处理，而不需要真的执行那个操作。但同时，该数据结构的所有其他操作都要考虑这个标记。<br>6-7：复杂的链式数据结构往往较容易写错。在包含多道题目的算法竞赛中，这一特点可以是选题的依据之一。<br>6-8：测试的任务就是检查一份代码是否正确。如果找到了错误，最好还能提供一个让它出错的数据；调试的任务是找到错误原因并改正。改正一个错误之后有可能引入新的错误，因此调试和测试往往要交替进行。<br>6-9：测试数据结构程序的常用方法是对拍：写一个功能相同但速度较慢的简易版本，再写一个数据生成器，不停对比快慢两个程序的输出。简易版本的代码越简单越好，因为重点不在效率，而在正确性。<br>6-10：数据的复杂性会大大影响调试的难度，因此在找到让程序出错的数据之后最好别急着调试，而应尝试简化数据，或者直接用更小的参数调用数据生成器，以找到更简单的错误数据。<br>6-11：给定一棵包含2d个结点（其中d为树的高度）的完全二叉树，如果把结点从上到下从左到右编号为1,2,3……，则结点k的左右子结点编号分别为2k和2k+1。<br>6-12：如果要定义一棵二叉树，一般是定义一个“结点”类型的struct（如叫Node），然后保存树根的指针（如Node* root）。<br>6-13：可以用new运算符申请空间并执行构造函数。如果返回值为NULL，说明空间不足，申请失败。<br>6-14：可以用队列实现二叉树的层次遍历。这个方法还有一个名字，叫做宽度优先遍历（Breadth-First Search，BFS）。<br>6-15：如果程序动态申请内存，请注意内存泄漏。程序执行完毕后，操作系统会回收该程序申请的所有内存（包括泄漏的），所以在算法竞赛中内存泄漏往往不会造成什么影响。但是，从专业素养的角度考虑，请从现在开始养成好习惯，对内存泄漏保持警惕。<br>6-16：可以用数组来实现二叉树，方法是用整数表示结点编号，left[u]和right[u]分别表示u的左右子结点的编号。<br>6-17：可以用静态数组配合空闲列表来实现一个简单的内存池。虽然在大多数算法竞赛题目中用不上，但是内存池技术在高水平竞赛以及工程实践中都极为重要。<br>6-18：二叉树有3种深度优先遍历：先序遍历、中序遍历和后序遍历。<br>6-19：给定二叉树的中序遍历和后序遍历，可以构造出这棵二叉树。方法是根据后序遍历找到树根，然后在中序遍历中找到树根，从而找出左右子树的结点列表，然后递归构造左右子树。<br>6-20：当题目比较复杂时，建议先手算样例或者至少把样例的图示画出来，以免误解题意。<br>6-21：图也有DFS遍历和BFS遍历，其中前者用递归实现，后者用队列实现。求多维数组连通块的过程也称为种子填充（floodfill）。<br>6-22：很多复杂的迷宫问题都可以转化为最短路问题，然后用BFS求解。在套用BFS框架之前，需要先搞清楚图中的“结点”包含哪些内容。<br>6-23：使用BFS求出图的最短路之后，可以用递归方式打印最短路的具体路径。如果最短路非常长，递归可能会引起栈溢出，此时可以改用循环，用vector保存路径。<br>6-24：可以用DFS求出有向无环图（DAG）的拓扑排序。如果排序失败，说明该有向图存在有向环，不是DAG。<br>6-25：根据连通性和度数可以判断出无向图和有向图是否存在欧拉道路和欧拉回路。可以用DFS构造欧拉回路和欧拉道路。  </p><p>7-1：即使采用暴力法求解问题，对问题进行一定的分析往往会让算法更简洁、高效。<br>7-2：如果某问题的解可以由多个步骤得到，而每个步骤都有若干种选择（这些候选方案集可能会依赖于先前作出的选择），且可以用递归枚举法实现，则它的工作方式可以用解答树来描述。<br>7-3：枚举排列的常见方法有两种：一是递归枚举，二是用STL中的next_permutation。<br>7-4：在枚举子集的增量法中，需要使用定序的技巧，避免同一个集合枚举两次。<br>7-5：在枚举子集的位向量法中，解答树的结点数略多，但在多数情况下仍然够快。<br>7-6：可以用二进制表示子集，其中从右往左第i位（从0开始编号）表示元素i是否在集合中（1表示“在”，0表示“不在”）。<br>7-7：当用二进制表示子集时，位运算中的按位与、或、异或对应集合的交、并和对称差。<br>7-8：从代码量看，枚举子集的最简单方法是二进制法。<br>7-9：在编写递归枚举程序之前，需要深入分析问题，对模型精雕细琢。一般还应对解答树的结点数有一个粗略的估计，作为评价模型的重要依据，如图7-5所示。<br>7-10：当把问题分成若干步骤并递归求解时，如果当前步骤没有合法选择，则函数将返回上一级递归调用，这种现象称为回溯。正是因为这个原因，递归枚举算法常被称为回溯法，应用十分普遍。<br>7-11：如果在回溯法中使用了辅助的全局变量，则一定要及时把它们恢复原状。特别地，若函数有多个出口，则需在每个出口处恢复被修改的值。<br>7-12：如果最坏情况下的枚举量很大，应该使用回溯法而不是生成-测试法。<br>7-13：在回溯法中，应注意避免不必要的判断，就像在八皇后问题中那样，只需判断新皇后和之前的皇后是否冲突，而不必判断以前的皇后是否相互冲突。<br>7-14：在求最优解的问题中，应尽量考虑最优性剪枝。这往往需要记录下当前最优解，并且想办法“预测”一下从当前结点出发是否可以扩展到更好的方案。具体来说，先计算一下最理想情况可以得到怎样的解，如果连理想情况都无法得到比当前最优解更好的方案，则剪枝。<br>7-15：路径寻找问题可以归结为隐式图的遍历，它的任务是找到一条从初始状态到终止状态的最优路径，而不是像回溯法那样找到一个符合某些要求的解。<br>7-16：隐式图遍历需要用一个结点查找表来判重。一般来说，使用STL集合实现的代码最简单，但效率也较低。如果题目对时间要求很高，可以先把STL集合版的程序调试通过，然后转化为哈希表甚至完美哈希表。<br>7-17：对于可以用回溯法求解但解答树的深度没有明显上限的题目，可以考虑使用迭代加深搜索（iterative deepening）。<br>7-18：如果可以设计出一个乐观估价函数，预测从当前结点至少还需要扩展几层结点才有可能得到解，则迭代加深搜索变成了IDA*算法。<br>：要事先判断结点1是否可以到达结点k，否则会超时。</p><p>8-1：统计程序中“基本操作”的数量，可以排除机器速度的影响，衡量算法本身的优劣程度。<br>8-2：基本操作的数量往往可以写成关于“输入规模”的表达式，保留最大项并忽略系数后的简单表达式称为算法的渐进时间复杂度，用于衡量算法中基本操作数随规模的增长情况。<br>8-3：渐进时间复杂度忽略了很多因素，因而分析结果只能作为参考，并不是精确的。尽管如此，如果成功抓住了最主要的运算量所在，算法分析的结果常常十分有用。<br>8-4：在算法设计中，常常不进行精确分析，而是假定各种最坏情况同时取到，得到上界。在很多情况下，这个上界和实际情况同阶（称为“紧”的上界），但也有可能会因为分析方法不够好，得到“松”的上界。<br>8-5：在算法分析中，往往可以忽略“除法结果是否为整数”，而直接按照实数除法分析。这样的近似对最终结果影响很小，一般不会改变渐进时间复杂度。<br>8-6：递归方程$T(n)&#x3D;2T(n&#x2F;2)+\Theta(n); T(1)&#x3D;1$的解为$T(n)&#x3D;\Theta(n\log n)$。<br>8-7：归并排序的时间复杂度为O(nlogn)。对该算法稍加修改，可以统计序列中的逆序对的个数，时间复杂度不变。<br>8-8：快速排序的时间复杂度为：最坏情况O(n^2)，平均情况O(nlogn)，但实践中几乎不可能达到最坏情况，效率非常高。根据快速排序思想，可以在平均O(n)时间内选出数组中第k大的元素。<br>8-9：逐步缩小范围法是一种常见的思维方法。二分查找便是基于这种思路，它遵循分治三步法，把原序列划分成元素个数尽量接近的两个子序列，然后递归查找。二分查找只适用于有序序列，时间复杂度为O(logn)。<br>8-10：二分查找一般写成非递归形式。<br>8-11：用“上下界”函数求解范围统计问题的技巧非常有用，建议读者用心体会左闭右开区间的使用方法和上下界函数的实现细节。  </p><p>9-1：动态规划的核心是状态和状态转移方程。<br>9-2：用直接递归的方法计算状态转移方程，效率往往十分低下。其原因是相同的子问题被重复计算了多次。<br>9-3：可以用递推法计算状态转移方程。递推的关键是边界和计算顺序。在多数情况下，递推法的时间复杂度是：状态总数×每个状态的决策个数×决策时间。如果不同状态的决策个数不同，需具体问题具体分析。<br>9-4：可以用记忆化搜索的方法计算状态转移方程。当采用记忆化搜索时，不必事先确定各状态的计算顺序，但需要记录每个状态“是否已经计算过”。<br>9-5：在记忆化搜索中，可以为正在处理的表项声明一个引用，简化对它的读写操作。<br>9-6：根据各个状态的指标值可以依次确定各个最优决策，从而构造出完整方案。由于决策是依次确定的，所以很容易按照字典序打印出所有方案。<br>9-7：当程序中需要用到特殊值时，应确保该值在正常情况下不会被取到。这不仅意味着特殊值不能有“正常的理解方式”，而且也不能在正常运算中“意外得到”。<br>9-8：在记忆化搜索中，如果用特殊值表示“还没算过”，则必须将其和其他特殊值（如无解）区分开。<br>9-9：在记忆化搜索中，可以用vis数组记录每个状态是否计算过，以占用一些内存为代价增强程序的可读性，同时减少出错的可能。<br>9-10：当用递推法计算出各个状态的指标之后，可以用与记忆化搜索完全相同的方式打印方案。<br>9-11：无论是用记忆化搜索还是递推，如果在计算最优值的同时“顺便”算出各个状态下的第一次最优决策，则往往能让打印方案的过程更加简单、高效。这是一个典型的“用空间换时间”的例子。<br>9-12：传统的递推法可以表示成“对于每个状态i，计算f(i)”，或者称为“填表法”。这需要对于每个状态i，找到f(i)依赖的所有状态，在某些时候并不方便。另一种方法是“对于每个状态i，更新f(i)所影响到的状态”，或者称为“刷表法”，有时比填表法方便。但需要注意的是，只有当每个状态所依赖的状态对它的影响相互独立时才能用刷表法。<br>9-13：多阶段决策的最优化问题往往可以用动态规划解决，其中，状态及其转移类似于回溯法中的解答树。解答树中的“层数”，也就是递归函数中的“当前填充位置”cur，描述的是即将完成的决策序号，在动态规划中被称为“阶段”。<br>9-14：动态规划的适用性很广。不少可以用动态规划解决的题目，在条件稍微变化后只需对状态转移方程做少量修改即可解决新问题。<br>9-15：学习动态规划的题解，除了要理解状态表示及其转移方程外，最好思考一下为什么会想到这样的状态表示。<br>9-16：在多阶段决策问题中，阶段定义了天然的计算顺序。<br>9-17：在递推法中，如果计算顺序很特殊，而且计算新状态所用到的原状态不多，可以尝试用滚动数组减少内存开销。<br>9-18：在使用滚动数组后，解的打印变得困难了，所以在需要打印方案甚至要求字典序最小方案的场合，应慎用滚动数组。<br>9-19：位运算的优先级往往比较低。如果不确定表达式的计算顺序，应多用括号。<br>9-20：如果用二进制表示子集并进行动态规划，集合中的元素就隐含了阶段信息。例如，可以把集合中的最大元素想象成“阶段”。<br>9-21：即使状态定义相同，过多地考虑不必要的决策仍可能会导致时间复杂度上升。<br>9-22：如果S’是S的真子集，则一定有S’&lt;S。在用递推法实现子集的动态规划时，该规则往往可以确定计算顺序。<br>9-23：枚举1～n的每个集合S的所有子集的总时间复杂度为O(3n)。    </p><p>10-1：设a, b, c为任意整数。若方程ax+by&#x3D;c的一组整数解为(x0,y0)，则它的任意整数解都可以写成(x0+kb’, y0-ka’)，其中a’&#x3D;a&#x2F;gcd(a,b)，b’&#x3D;b&#x2F;gcd(a,b)，k取任意整数。<br>10-2：设a, b, c为任意整数，g&#x3D;gcd(a,b)，方程ax+by&#x3D;g的一组解是(x0,y0)，则当c是g的倍数时ax+by&#x3D;c的一组解是(x0c&#x2F;g, y0c&#x2F;g)；当c不是g的倍数时无整数解。<br>10-3：a≡b(mod n)的含义是“a和b除以n的余数相同”，其充要条件是“a-b是n的整数倍”。<br>10-4：方程ax≡1(mod n)的解称为a关于模n的逆。当gcd(a,n)&#x3D;1时，该方程有唯一解；否则，该方程无解。<br>10-5：如果样本空间由有限个等概率的简单事件组成，事件E的概率可以用组合计数的方法得到:$P(E)&#x3D;\frac{|E|}{|S|}$<br>10-6：数学归纳法是一种利用递归的思想证明的方法。如果要讨论的对象具有某种递归性质（如正整数），可以考虑用数学归纳法。<br>10-7：满足$F_1, F_2&#x3D;1，F_n&#x3D;F_n-1+F_n-2$的数列称为Fibonacci数列，它的前若干项是1, 1, 2, 3, 5, 8, 13, 21, 34, 55,…。<br>10-8：在建立递推式时，经常会用到乘法原理，其核心是分步计数。如果可以把计数分成独立的两个步骤，则总数量等于两步计数之乘积。  </p><p>11-1：建立表达式树的一种方法是每次找到最后计算的运算符，然后递归建树。“最后计算”的运算符是在括号外的、优先级最低的运算符。如果有多个，根据结合性来选择：左结合的（如加、减、乘、除）选最右边；右结合的（如乘方）选最左边。根据规定，优先级相同的运算符的结合性总是相同。<br>11-2：在最大流问题中，容量c和流量&gt;f满足3个性质：容量限制（$f(u,v)≤c(u,v)$）、斜对称性（$f(u,v)&#x3D;-f(v,u)$）和流量平衡（对于除了结点s和t外的任意结点u，$\sum\limits_{(u,v)\in E} f(u,v)&#x3D;0$。问题的目标是最大化$|f|&#x3D;\sum\limits_{(s,v)\in E} f(s,v)&#x3D;\sum\limits_{(u,t)\in E} f(u,t)$，即从s点流出的净流量（它也等于流入t点的净流量）。<br>11-3：当且仅当残量网络中不存在s-t有向道路（增广路）时，此时的流是从s到t的最大流。<br>11-4：增广路算法结束时，令已标号结点（a[u]&gt;0的结点）集合为S，其他结点集合为T&#x3D;V-S，则(S, T)是图的s-t最小割。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 搬运 </tag>
            
            <tag> 书 </tag>
            
            <tag> 编程 </tag>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数阶乘</title>
      <link href="/2018/06/15/%E5%A4%A7%E6%95%B0%E9%98%B6%E4%B9%98/"/>
      <url>/2018/06/15/%E5%A4%A7%E6%95%B0%E9%98%B6%E4%B9%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintFact</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> result[<span class="number">1000</span>] = &#123;<span class="number">1</span>&#125;, len = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>, carry = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>, t; j &lt; len; carry = t / <span class="number">10</span>, ++j)</span><br><span class="line">            result[j] = (t = result[j] * i + carry) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (; carry; carry /= <span class="number">10</span>)</span><br><span class="line">            result[len++] = carry % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (len--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, result[len]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    PrintFact(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 题目 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
